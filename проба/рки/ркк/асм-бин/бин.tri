// конвертирует р-ассемблер в р-бинарный код
модуль асм-бин

импорт "стд::вывод"
импорт "стд::строки"
импорт "стд::файлы"

тип Байты = []Байт
тип Строки = []Строка

фн перевести файл*(имя-файла: Строка) {

    пусть ф = файлы.новый файл(имя-файла)
    
    пусть байты = ф.прочитать()
    если ф.ошибка?() # пусто {
        авария(строки.ф("$;", ф.ошибка?()^. сообщение()))
    }

    пусть стр = байты(:Строка)
    пусть список = строки.разобрать(стр, "\n")

    пусть рез  = перевести текст(список)
    
    записать файл(имя-файла, рез)
}

фн перевести текст(строки: Строки): Байты {
    пусть байты = Байты[]
    
    цикл с среди строки {
        перевести команду(байты, с)
    }     
    
    вернуть байты
}

фн записать файл(имя-файла: Строка, байты: Байты) {

	пусть путь-файла = строки.собрать( имя-файла, ".ркбин")

    пусть ф = файлы.новый файл(путь-файла)
    
    ф.записать(байты)
    если ф.ошибка?() # пусто {
        авария(строки.ф("$;", ф.ошибка?()^. сообщение()))
    }
}


